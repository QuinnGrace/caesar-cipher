import sys

encoded_string = []    
def encrypt (message, num_to_move):
    for char in message:
        char_num = ord(char) + num_to_move
        encoded_string.append(chr(char_num))
    
    neat_encoded_string = "".join(encoded_string)
        
    return neat_encoded_string

decoded_string = []    
def decrypt (message, num_to_move):
    for char in message:
        char_num = ord(char) - num_to_move
        decoded_string.append(chr(char_num))
    
    neat_decoded_string = "".join(decoded_string)
        
    return neat_decoded_string

from enchant.checker import SpellChecker


 
def decrypt_hard (message):
    for i in range(25):
        decoded_string = []
        for char in message:
            char_num = ord(char) - i
            decoded_string.append(chr(char_num))
            neat_decoded_string = "".join(decoded_string) 
        chkr = SpellChecker("en_US")
        chkr.set_text(neat_decoded_string)
        acc_counter = 0
        for err in chkr:
            #print("ERROR:", err.word)
            acc_counter = acc_counter + 1
#        print(acc_counter)
        if acc_counter<5:
            break
    i = i + 1
    return neat_decoded_string

#obtain user's selection
user_choice = int(input("Type the number of the option you would like to use: \n 1 - Encrypt\n 2 - Decrypt\n 0 - Exit\n --> "))


if user_choice == 1:
#encrypt path
    message_to_encode = input("What message would you like to encode? --> ")
    message_to_encode = message_to_encode.upper()
    #input for number of places moved
    encoded_message = encrypt(message_to_encode, 5)
    print(f'Your encrypted message reads: {encoded_message}')
    
elif user_choice == 2:
#decrypt path
    message_to_decode = input("What message would you like to decode? --> ")
    message_to_decode = message_to_decode.upper()
    
    type_of_decryption = int(input("Do you know how many places the characters were moved to encode the message? \n 1 - Yes \n 2 - No\n --> "))
    #input for number of places moved
    if type_of_decryption == 1:
        decoded_message = decrypt(message_to_decode, 5)
    else:
        decoded_message = decrypt_hard(message_to_decode)
    print(f"Once decrypted, your message reads {decoded_message}")
    
elif user_choice == 0:
#exit path
    sys.exit()    
    
else:
    print("Invalid input, please try again")
    
'''
https://www.geeksforgeeks.org/python-exit-commands-quit-exit-sys-exit-and-os-_exit/

https://stackoverflow.com/questions/11178061/print-list-without-brackets-in-a-single-row
https://stackoverflow.com/users/1478098/isuru
https://stackoverflow.com/users/1172428/fatalerror

https://www.digitalocean.com/community/tutorials/python-ord-chr

https://www.digitalocean.com/community/tutorials/how-to-use-break-continue-and-pass-statements-when-working-with-loops-in-python-3
Lisa Tagliaferri

https://pyenchant.github.io/pyenchant/tutorial.html

'''
